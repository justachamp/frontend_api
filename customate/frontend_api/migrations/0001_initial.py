# Generated by Django 2.1.3 on 2019-02-08 08:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import enumfields.fields
import frontend_api.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='AdminUserPermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manage_admin_user', models.BooleanField(default=False, verbose_name='manage admins')),
                ('manage_tax', models.BooleanField(default=False, verbose_name='manage tax')),
                ('manage_fee', models.BooleanField(default=False, verbose_name='manage fee')),
                ('can_login_as_user', models.BooleanField(default=False, verbose_name='can login')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company_type', enumfields.fields.EnumField(blank=True, enum=frontend_api.fields.CompanyType, max_length=30, null=True)),
                ('registration_business_name', models.CharField(blank=True, max_length=50)),
                ('registration_number', models.CharField(blank=True, max_length=8)),
                ('vat_number', models.CharField(blank=True, max_length=12)),
                ('is_private', models.BooleanField(default=True, help_text='Designates whether this company has only owner. Unselect this to add ability adding shareholders.', verbose_name='private')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this shareholder should be treated as active. Unselect this instead of deleting it.', verbose_name='active')),
                ('address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Address')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Shareholder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('birth_date', models.DateField(verbose_name='day of birth')),
                ('country_of_residence', models.CharField(max_length=30, verbose_name='country of residence')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this shareholder should be treated as active. Unselect this instead of deleting id.', verbose_name='active')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shareholders', to='frontend_api.Company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubUserPermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manage_sub_user', models.BooleanField(default=False, verbose_name='manage sub users')),
                ('manage_funding_sources', models.BooleanField(default=False, verbose_name='manage funding sources')),
                ('manage_unload_accounts', models.BooleanField(default=False, verbose_name='manage unload accounts')),
                ('manage_contract', models.BooleanField(default=False, verbose_name='create contract')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdminUserAccount',
            fields=[
                ('account_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='frontend_api.Account')),
            ],
            options={
                'permissions': (('admin_account_access', 'Admin account access'), ('admin_group_account_access', 'Admin group account access'), ('manage_admin_user', 'Manage admins'), ('manage_tax', 'Manage tax'), ('manage_fee', 'Manage fee'), ('login_as_user', 'Login as user')),
            },
            bases=('frontend_api.account',),
        ),
        migrations.CreateModel(
            name='SubUserAccount',
            fields=[
                ('account_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='frontend_api.Account')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('frontend_api.account',),
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('account_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='frontend_api.Account')),
                ('account_type', enumfields.fields.EnumField(default='personal', enum=frontend_api.fields.AccountType, max_length=10)),
                ('position', models.CharField(blank=True, max_length=50, null=True)),
                ('company', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account', to='frontend_api.Company')),
            ],
            options={
                'permissions': (('owner_access', 'Account owner'), ('owner_account_access', 'Owner account access'), ('owner_group_account_access', 'Owner group account access'), ('sub_user_account_access', 'Sud user account access'), ('sub_user_group_account_access', 'Sud user group account access'), ('manage_sub_user', 'Manage sub-users'), ('manage_funding_sources', 'Manage funding sources'), ('manage_unload_accounts', 'Manage unload accounts'), ('manage_contract', 'Manage contract')),
            },
            bases=('frontend_api.account',),
        ),
        migrations.AddField(
            model_name='account',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_frontend_api.account_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='account',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='subuserpermission',
            name='account',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='permission', to='frontend_api.SubUserAccount'),
        ),
        migrations.AddField(
            model_name='subuseraccount',
            name='owner_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_user_accounts', to='frontend_api.UserAccount'),
        ),
        migrations.AddField(
            model_name='adminuserpermission',
            name='account',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='permission', to='frontend_api.AdminUserAccount'),
        ),
    ]
